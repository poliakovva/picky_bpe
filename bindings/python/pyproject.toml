[project]
name = 'pbpe_tokenizer'
version = '0.1.0'
requires-python = '>=3.7'
authors = [
    {name = 'Vlad Polyakov', email = 'vladpolyakov@example.com'}
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["NLP", "tokenizer", "BPE", "transformer", "deep learning"]
description = "A Python implementation of Byte Pair Encoding (BPE) tokenizer"
license = "Apache-2.0"
readme = "README.md"
dependencies = []

[project.optional-dependencies]
testing = ["pytest", "numpy"]
dev = ["pbpe_tokenizer[testing]"]

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[tool.maturin]
python-source = "py_src"
module-name = "pbpe_tokenizer.pbpe_tokenizer"
bindings = 'pyo3'
features = ["pyo3/extension-module"]

[tool.black]
line-length = 119
target-version = ['py35']

[tool.ruff]
line-length = 119
target-version = "py311"
lint.ignore = [
    # a == None in tests vs is None.
    "E711",
    # a == False in tests vs is False.
    "E712",
    # try.. import except.. pattern without using the lib.
    "F401",
    # Raw type equality is required in asserts
    "E721",
    # Import order
    "E402",
    # Fixtures unused import
    "F811",
]
